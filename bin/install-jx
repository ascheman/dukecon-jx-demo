#!/bin/bash

set -eu

dirname=`dirname $0`
test "${dirname}" || dirname=.
basedir="${dirname}/.."
downloaddir="${basedir}/downloads"

currentVersion () {
  if test -x /usr/bin/jq; then
    version="$(curl --silent "https://api.github.com/repos/jenkins-x/jx/releases/latest" | jq -r '.tag_name')"
  else
    version="$(curl --silent "https://github.com/jenkins-x/jx/releases/latest" | sed 's#.*tag/\(.*\)\".*#\1#')"
  fi
  echo "${version}"
}

downloadAndInstall () {
  os=$1

  (cd ${downloaddir}
    version=`currentVersion`
    filename="jx-${os}-${version}.tar.gz"
    test -r ${filename} || curl -L -o ${filename} "https://github.com/jenkins-x/jx/releases/download/${version}/jx-${os}.tar.gz"
    tar xf ${filename} jx
    sudo mv jx /usr/local/bin/jx
  )
}


case `uname -v` in
  *Ubuntu* | *Debian* )
    if test -x /usr/local/bin/jx; then
      echo "JX is already installed - trying upgrade"
      sudo jx upgrade cli
    else
      downloadAndInstall "linux-amd64"
    fi
    ;;
  Darwin* )
    if test -x /usr/local/bin/brew; then
      if test -x /usr/local/bin/jx; then
        echo "JX is already installed - trying upgrade"
        brew upgrade jx
      else
        brew tap jenkins-x/jx
        brew install jx
      fi
    else
      if test -x /usr/local/bin/jx; then
        downloadAndInstall "darwin-amd64"
      else
        echo "JX is already installed - trying upgrade"
        jx upgrade cli
      fi
    fi
    ;;
esac

exec jx --version
